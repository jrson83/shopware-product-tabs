"use strict";(window["webpackJsonpPluginproduct-tabs-plugin"]=window["webpackJsonpPluginproduct-tabs-plugin"]||[]).push([[543],{543:function(t,e,a){a.r(e),a.d(e,{default:function(){return s}});let{Mixin:n,Data:{Criteria:i}}=Shopware,{mapPropertyErrors:o}=Shopware.Component.getComponentHelper();var s={template:'{% block sw_tab_detail %}\n<sw-page class="sw-tab-detail">\n\n    {% block sw_tab_detail_header %}\n    <template #smart-bar-header>\n        <h2>\n            {{ placeholder(tab, \'name\', $tc(\'sw-tab.detail.textHeadline\')) }}\n        </h2>\n    </template>\n    {% endblock %}\n\n    {% block sw_tab_detail_actions %}\n    <template #smart-bar-actions>\n\n        {% block sw_tab_detail_actions_abort %}\n        <sw-button v-tooltip.bottom="tooltipCancel"\n            :disabled="tabIsLoading || undefined"\n            @click="onCancel">\n            {{ $tc(\'sw-tab.detail.buttonCancel\') }}\n        </sw-button>\n        {% endblock %}\n\n        {% block sw_tab_detail_actions_save %}\n        <sw-button-process v-model:processSuccess="isSaveSuccessful"\n            v-tooltip.bottom="tooltipSave"\n            class="sw-tab-detail__save-action"\n            :is-loading="isLoading"\n            :disabled="isLoading || !acl.can(\'tab.editor\') || undefined"\n            variant="primary"\n            @click.prevent="onSave">\n            {{ $tc(\'sw-tab.detail.buttonSave\') }}\n        </sw-button-process>\n        {% endblock %}\n\n    </template>\n    {% endblock %}\n\n    {% block sw_tab_detail_language_switch %}\n    <template #language-switch>\n        <sw-language-switch :disabled="tabId == null || undefined"\n            :save-changes-function="saveOnLanguageChange"\n            :abort-change-function="abortOnLanguageChange"\n            @on-change="onChangeLanguage" />\n    </template>\n    {% endblock %}\n\n    {% block sw_tab_detail_content %}\n    <template #content>\n        <sw-card-view>\n            <template v-if="tabIsLoading">\n                <sw-skeleton variant="detail-bold" />\n                <sw-skeleton />\n            </template>\n\n            <template v-else>\n\n                {% block sw_tab_detail_content_language_info %}\n                <sw-language-info\n                    :entity-description="placeholder(tab, \'name\', $tc(\'sw-tab.detail.textHeadline\'))" />\n                {% endblock %}\n\n                {% block sw_tab_detail_base_basic_info_card %}\n                <sw-card position-identifier="sw-tab-detail-basic-info"\n                    :title="$tc(\'sw-tab.detail.cardNameTabInfo\')">\n                    <sw-container class="sw-tab-detail__container"\n                        columns="repeat(auto-fit, minmax(250px, 1fr))"\n                        gap="0 30px">\n                        <div class="sw-tab-detail__base-info-wrapper">\n\n                            {% block sw_tab_detail_base_info_field_name %}\n                            <sw-text-field v-model:value="tab.name"\n                                :label="$tc(\'sw-tab.detail.labelName\')"\n                                :placeholder="placeholder(tab, \'name\', $tc(\'sw-tab.detail.placeholderName\'))"\n                                name="name"\n                                validation="required"\n                                required\n                                :error="tabNameError"\n                                :disabled="!acl.can(\'tab.editor\') || undefined" />\n                            {% endblock %}\n\n                            {% block sw_tab_detail_base_info_field_position %}\n                            <sw-number-field v-model:value="tab.position"\n                                :label="$tc(\'sw-tab.detail.labelPosition\')"\n                                :placeholder="placeholder(tab, \'position\', $tc(\'sw-tab.detail.placeholderPosition\'))"\n                                name="position"\n                                validation="required"\n                                required\n                                :error="tabPositionError"\n                                :disabled="!acl.can(\'tab.editor\') || undefined" />\n                            {% endblock %}\n\n                        </div>\n                    </sw-container>\n\n                    {% block sw_tab_detail_base_info_field_content %}\n                    <sw-text-editor v-model:value="tab.content"\n                        :label="$tc(\'sw-tab.detail.labelContent\')"\n                        :placeholder="placeholder(tab, \'content\', $tc(\'sw-tab.detail.placeholderContent\'))"\n                        :error="tabContentError"\n                        name="content"\n                        required\n                        sanitize-input\n                        sanitize-field-name="tab_translation.content"\n                        :disabled="!acl.can(\'tab.editor\') || undefined" />\n                    {% endblock %}\n                </sw-card>\n                {% endblock %}\n            </template>\n        </sw-card-view>\n    </template>\n    {% endblock %}\n\n</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl"],mixins:[n.getByName("placeholder"),n.getByName("notification"),n.getByName("discard-detail-page-changes")("tab")],shortcuts:{"SYSTEMKEY+S":"onSave",ESCAPE:"onCancel"},props:{tabId:{type:String,required:!1,default:null}},data(){return{tab:null,isLoading:!1,isSaveSuccessful:!1}},metaInfo(){return{title:this.$createTitle(this.identifier)}},computed:{identifier(){return this.placeholder(this.tab,"name")},tabIsLoading(){return this.isLoading||null==this.tab},tabRepository(){return this.repositoryFactory.create("tab")},tooltipSave(){if(this.acl.can("tab.editor")){let t=this.$device.getSystemKey();return{message:`${t} + S`,appearance:"light"}}return{showDelay:300,message:this.$tc("sw-privileges.tooltip.warning"),disabled:this.acl.can("order.editor"),showOnDisabledElements:!0}},tooltipCancel(){return{message:"ESC",appearance:"light"}},...o("tab",["name","position","content"])},watch:{tabId(){this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){if(Shopware.ExtensionAPI.publishData({id:"sw-tab-detail__tab",path:"tab",scope:this}),this.tabId){this.loadEntityData();return}Shopware.State.commit("context/resetLanguageToDefault"),this.tab=this.tabRepository.create()},async loadEntityData(){this.isLoading=!0;let[t]=await Promise.allSettled([this.tabRepository.get(this.tabId)]);"fulfilled"===t.status&&(this.tab=t.value),"rejected"===t.status&&this.createNotificationError({message:this.$tc("global.notification.notificationLoadingDataErrorMessage")}),this.isLoading=!1},abortOnLanguageChange(){return this.tabRepository.hasChanges(this.tab)},saveOnLanguageChange(){return this.onSave()},onChangeLanguage(){this.loadEntityData()},onSave(){this.acl.can("tab.editor")&&(this.isLoading=!0,this.tabRepository.save(this.tab).then(()=>{if(this.isLoading=!1,this.isSaveSuccessful=!0,null===this.tabId){this.$router.push({name:"sw.tab.detail",params:{id:this.tab.id}});return}this.loadEntityData()}).catch(t=>{throw this.isLoading=!1,this.createNotificationError({message:this.$tc("global.notification.notificationSaveErrorMessageRequiredFieldsInvalid")}),t}))},onCancel(){this.$router.push({name:"sw.tab.list"})}}}}}]);